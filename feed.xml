<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.4.1">Jekyll</generator><link href="https://sprzwty.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="https://sprzwty.github.io/" rel="alternate" type="text/html" /><updated>2025-01-31T04:50:22+00:00</updated><id>https://sprzwty.github.io/feed.xml</id><title type="html">Mr.Wang</title><subtitle>Technics, Experiencies, Solutions, Interesting Things.</subtitle><author><name>Wang Tongyu</name></author><entry><title type="html">2023.09.25-MacTricks</title><link href="https://sprzwty.github.io/experience/MacTricks.html" rel="alternate" type="text/html" title="2023.09.25-MacTricks" /><published>2023-09-25T00:00:00+00:00</published><updated>2023-09-25T00:00:00+00:00</updated><id>https://sprzwty.github.io/experience/MacTricks</id><content type="html" xml:base="https://sprzwty.github.io/experience/MacTricks.html"><![CDATA[<h1 id="macos通用命令">macOS通用命令</h1>
<h2 id="应用功能部分">应用功能部分</h2>
<h3 id="1-提示应用无法打开或开发者签名无效等问题">1. 提示应用无法打开或开发者签名无效等问题</h3>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>sudo xattr -rd com.apple.quarantine 
</code></pre></div></div>
<p>+
<code class="language-plaintext highlighter-rouge">应用路径</code></p>

<p>例如：</p>

<div class="language-zsh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>xattr <span class="nt">-rd</span> com.apple.quarantine /Applications/Safari Technology Preview.app
</code></pre></div></div>

<h3 id="2-打开任意来源安装应用">2. 打开任意来源安装应用</h3>
<div class="language-zsh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>spctl <span class="nt">--master-disable</span>
</code></pre></div></div>

<h3 id="3-time-machine-全速备份指令">3. Time Machine 全速备份指令</h3>
<div class="language-zsh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>sysctl debug.lowpri<span class="se">\_</span><span class="nv">throttle_enabled</span><span class="o">=</span>0
</code></pre></div></div>

<h3 id="4-开盖开机">4. 开盖开机</h3>
<h4 id="41-开启开盖开机">4.1 开启开盖开机</h4>
<div class="language-zsh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>nvram <span class="nv">AutoBoot</span><span class="o">=</span>%03
</code></pre></div></div>
<h4 id="42-关闭开盖开机">4.2 关闭开盖开机</h4>
<div class="language-zsh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>nvram <span class="nv">AutoBoot</span><span class="o">=</span>%00
</code></pre></div></div>

<h3 id="5-开机启动声音">5. 开机启动声音</h3>
<h4 id="51-关闭开机启动声音">5.1 关闭开机启动声音</h4>
<div class="language-zsh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>nvram <span class="nv">SystemAudioVolume</span><span class="o">=</span>%00
</code></pre></div></div>
<h4 id="52-恢复开机启动声音">5.2 恢复开机启动声音</h4>
<div class="language-zsh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>nvram <span class="nt">-d</span> SystemAudioVolume
</code></pre></div></div>
<h3 id="6-macos清除更新角标">6. Macos清除更新角标</h3>
<div class="language-zsh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>defaults write com.apple.appstored BadgeCount 0
killall Dock
<span class="nb">rm</span> ~/Library/Preferences/com.apple.appstored.plist
defaults write com.apple.systempreferences AttentionPrefBundleIDs 0
killall Dock
</code></pre></div></div>
<h3 id="7---5截图阴影开启关闭指令">7. ⌘ +⇧ +5截图阴影开启&amp;关闭指令</h3>
<div class="language-zsh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>defaults write com.apple.screencapture disable-shadow <span class="nt">-bool</span> <span class="nb">true</span><span class="o">&amp;&amp;</span>killall SystemUIServer
defaults write com.apple.screencapture disable-shadow <span class="nt">-bool</span> <span class="nb">false</span><span class="o">&amp;&amp;</span>killall SystemUIServer
</code></pre></div></div>
<h3 id="8-虚拟内存">8. 虚拟内存</h3>
<!--mac电脑是将内存当作虚拟内存的，通常是不启用的，启用会降低电脑运行速度-->
<h4 id="81-启用命令">8.1 启用命令</h4>
<div class="language-zsh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>launchctl load <span class="nt">-w</span> /System/Library/LaunchDaemons/com.apple.metadata.mds.plist
</code></pre></div></div>
<!--虚拟内存容量无法设置。-->
<h4 id="82-禁用命令">8.2 禁用命令</h4>
<div class="language-zsh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>launchctl unload <span class="nt">-w</span> /System/Library/LaunchDaemons/com.apple.metadata.mds.plist
</code></pre></div></div>

<h3 id="9-macos-terminal默认shell为bash时自动加载bashrc的方式">9. macOS terminal默认shell为bash时自动加载.bashrc的方式</h3>
<ol>
  <li>在用户文件夹下找到<code class="language-plaintext highlighter-rouge">.bash_profile</code>文件</li>
  <li>打开并在最后插入以下代码
    <div class="language-zsh highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="k">if</span> <span class="o">[</span> <span class="nt">-f</span> ~/.bashrc <span class="o">]</span> 
 <span class="nb">.</span> ~/.bashrc
 <span class="k">fi</span>
</code></pre></div>    </div>
  </li>
</ol>

<h3 id="10-解决mds_store占用高资源cpu关闭md服务">10. 解决mds_store占用高资源CPU—关闭md服务</h3>
<div class="language-zsh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>mdutil <span class="nt">-a</span> <span class="nt">-i</span> off
<span class="nb">sudo </span>nvram boot-args<span class="o">=</span><span class="s2">"serverperfmode=1 </span><span class="si">$(</span>nvram boot-args 2&gt;/dev/null | <span class="nb">cut</span> <span class="nt">-f</span> 2-<span class="si">)</span><span class="s2">"</span>
change nvram to server performanc emode
就是serverinfo —setperfmode 1
</code></pre></div></div>

<h3 id="11-mac防止自动激活conda环境">11. Mac防止自动激活conda环境</h3>
<div class="language-zsh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>conda config <span class="nt">--set</span> auto_activate_base <span class="nb">false</span>
</code></pre></div></div>

<h3 id="12-刷新quicklook列表">12. 刷新quicklook列表</h3>
<div class="language-zsh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>qlmanage <span class="nt">-r</span>
</code></pre></div></div>
<h3 id="13-打开app-store-debug目录">13. 打开App Store debug目录</h3>
<div class="language-zsh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>defaults write com.apple.appstore ShowDebugMenu <span class="nt">-bool</span> <span class="nb">true</span>
</code></pre></div></div>

<h3 id="14-去掉资源库文件夹的隐藏属性">14. 去掉资源库文件夹的隐藏属性</h3>

<h4 id="141-关闭隐藏属性">14.1 关闭隐藏属性：</h4>
<div class="language-zsh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>chflags nohidden ~/Library/
</code></pre></div></div>
<h4 id="142-打开隐藏属性">14.2 打开隐藏属性：</h4>
<div class="language-zsh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>chflags hidden ~/Library/
</code></pre></div></div>
<h3 id="15-去除base字样而不影响使用conda">15. 去除（base）字样而不影响使用conda</h3>
<p>【通过.condarc文件来控制显示（此文件在~/.condarc下）】
在文件最后加入「<code class="language-plaintext highlighter-rouge">changeps1: False</code>」</p>

<h3 id="16-开启touch-id强认证模式">16. 开启Touch ID强认证模式</h3>
<pre><code class="language-file">/private/etc/pam.d/sudo
</code></pre>

<p>这个文件中添加</p>

<div class="language-zsh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>auth sufficient pam_tid.so
</code></pre></div></div>

<h3 id="17-txt文件字数统计">17. TXT文件字数统计</h3>
<div class="language-zsh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">wc</span> <span class="nt">-lc</span> 文档.txt
</code></pre></div></div>

<h3 id="18-正则表达式处理txt">18. 正则表达式处理TXT</h3>
<h4 id="181-最前面添加东西使用符号进行替换">18.1 最前面添加东西：使用「＾」符号进行替换</h4>
<h4 id="182-最后面添加东西使用符号进行替换">18.2 最后面添加东西：使用「$」符号进行替换</h4>

<h3 id="19-下载各个版本的macos">19. 下载各个版本的macos</h3>

<h4 id="app-store">—————App Store—————</h4>
<ul>
  <li>
    <p><a href="https://apps.apple.com/gb/app/macos-big-sur/id1526878132?mt=12">macOS Big Sur version 11</a></p>
  </li>
  <li>
    <p><a href="https://apps.apple.com/gb/app/macos-catalina/id1466841314?mt=12">macOS Catalina 10.15</a></p>
  </li>
  <li>
    <p><a href="https://apps.apple.com/gb/app/macos-mojave/id1398502828?mt=12">macOS Mojave 10.14</a></p>
  </li>
  <li>
    <p><a href="https://apps.apple.com/us/app/macos-high-sierra/id1246284741?mt=12">macOS High Sierra 10.13</a></p>
  </li>
</ul>

<h4 id="-直链">* —————直链——————</h4>
<ul>
  <li>
    <p><a href="http://updates-http.cdn-apple.com/2019/cert/061-41343-20191023-02465f92-3ab5-4c92-bfe2-b725447a070d/InstallMacOSX.dmg">macOS 10.10 Yosemite</a></p>
  </li>
  <li>
    <p><a href="http://updates-http.cdn-apple.com/2019/cert/061-41424-20191024-218af9ec-cf50-4516-9011-228c78eda3d2/InstallMacOSX.dmg">macOS 10.11 El Capitan</a></p>
  </li>
  <li>
    <p><a href="http://updates-http.cdn-apple.com/2019/cert/061-39476-20191023-48f365f4-0015-4c41-9f44-39d3d2aca067/InstallOS.dmg">macOS 10.12 Sierra</a></p>
  </li>
</ul>]]></content><author><name>Wang Tongyu</name></author><category term="Experience" /><category term="Experience" /><summary type="html"><![CDATA[macOS通用命令 应用功能部分 1. 提示应用无法打开或开发者签名无效等问题]]></summary></entry><entry><title type="html">2023.09.25-MacTricks</title><link href="https://sprzwty.github.io/experience/%E5%90%AC%E5%88%B0%E9%82%A3%E9%A6%96%E6%9B%BE%E7%BB%8F%E6%9C%80%E7%88%B1%E7%9A%84%E6%AD%8C.html" rel="alternate" type="text/html" title="2023.09.25-MacTricks" /><published>2023-09-25T00:00:00+00:00</published><updated>2023-09-25T00:00:00+00:00</updated><id>https://sprzwty.github.io/experience/%E5%90%AC%E5%88%B0%E9%82%A3%E9%A6%96%E6%9B%BE%E7%BB%8F%E6%9C%80%E7%88%B1%E7%9A%84%E6%AD%8C</id><content type="html" xml:base="https://sprzwty.github.io/experience/%E5%90%AC%E5%88%B0%E9%82%A3%E9%A6%96%E6%9B%BE%E7%BB%8F%E6%9C%80%E7%88%B1%E7%9A%84%E6%AD%8C.html"><![CDATA[<h2 id="曾经很爱的歌能唤起回忆的一些音乐">曾经很爱的歌–能唤起回忆的一些音乐</h2>

<p>从小，就有这种感觉。听到某一首歌，脑子里就能播放出来那会儿的画面，大家说的什么，我在干什么，环境是什么样的等等。感觉很有意思，还是记下来吧</p>

<h3 id="夜曲">夜曲</h3>
<p>这首歌算是当时听过之后就跟喜欢的一首歌儿了。关于这首歌儿的记忆就是：一家人一起去怀柔玩，准备回家的路上，我们想要去一家吃炖鱼的餐厅吃饭。然后外面下起来倾盆大雨，雨刷器开到最快也看不清前面的路。当时车里面唱的就是夜曲。虽然当时的感受和这首歌所表达的意思毫无关系，但是我对这首歌的记忆尤为深刻。“爸爸妈妈在的话就不会有问题”以及“只要是爸爸妈妈在的地方就是家在的地方”的那种很强烈的安全感直接就在身上了。但是后来因为雨实在是下的太大了，然后我们两辆车就停下来了，当时也没有什么视频通话，我们在车里面的交流都是靠对讲机，然后我们就一起拿着对讲机唱歌，大家彼此都唱一段。感觉真的是很开心的时候留下的这个回忆。随后到了餐厅，每一盘菜都变得格外好吃。那会儿大家出去玩，也不喝酒，两边的妈妈也都很年轻，那个时候，好想念。</p>]]></content><author><name>Wang Tongyu</name></author><category term="Experience" /><category term="Experience" /><summary type="html"><![CDATA[曾经很爱的歌–能唤起回忆的一些音乐]]></summary></entry><entry><title type="html">2023.07.26 一些些小想法</title><link href="https://sprzwty.github.io/thought/Some-thought230726.html" rel="alternate" type="text/html" title="2023.07.26 一些些小想法" /><published>2023-07-25T00:00:00+00:00</published><updated>2023-07-25T00:00:00+00:00</updated><id>https://sprzwty.github.io/thought/Some-thought230726</id><content type="html" xml:base="https://sprzwty.github.io/thought/Some-thought230726.html"><![CDATA[<h3 id="for-those-who-do-not-understand-chinese">For those who do not understand Chinese</h3>

<p>Because this page is talking about my thoughts of my daily life, so the English and Japanese is not available. If you want to read, Please use the ‘translate’ function provided by your web browser or your own translate services. If you’d like to challenge your Chinese level, Please feel free to read this page. :～)</p>

<p>最近写了个论文，没什么特别多的时间写博客了。今儿终于抽出来了点儿时间写这个blog。</p>

<h3 id="学术上的执着与痛苦">学术上的执着与痛苦</h3>

<p>写论文是一个很神奇的感觉。因为这次真的确确实实是有东西可以写的原因吧，这是我人生第一次体验到这种感觉。原来大家写论文的时候是真的想把自己的某种特别的想法展示给这个世界。这种感觉就有点像是在小学上课的时候，老师还没讲过乘法，让我们做4+5+6这道题，而你发现，这个式子的计算方法就等于5x3，然后你把手举得高高的跟老师说：“这个题我有个好方法！”的那种感觉。当然写论文这件事儿本身要比上面这个例子难多了。由于不是英语母语所以说实话，直接用英语去准确表述脑海里的想法对我来说的的确确他不是个简单事儿。</p>

<p>但是话又说回来了，英语母语的人还是少数，磨练自己的英语水平才是正道。写完初版论文发给老师的感觉就有点像是小学写完作文给妈妈修改的感觉一样。妈妈亦或是老师给的修改完全能看懂但是自己就是写不出来，总有一种非常别扭的感觉。归根结底写的太少，多练练估计就好起来了。</p>

<p>总之这回写论文从早上6点干到晚上24点足足干了7天，这种打了鸡血努力的感觉很久没体验过了。老师真的是我的最强辅助，疯狂帮我修改论文！（在这里感谢郑重一下X博士），多亏了X博士的疯狂输出才得以压着DDL提交了论文。一个图片我记得也就来来回回改了40次吧，然后全文终稿和初稿基本上已经看不出来是一个东西了。最后看着这份终稿真的感慨万千了。</p>

<p>无论最后有没有过审，对于我来说这个7月后半个月的时光真的很难忘，在我未来的研究生活里应该都很有帮助！</p>

<p>至于上课。。。。。最近没咋上课。。。不多做评论了，写完这个blog就滚去预习了。</p>

<h3 id="身边人的鼓励与陪伴">身边人的鼓励与陪伴</h3>

<p>最近吧，虽然学习上比较玩儿命，但是社交上面还是很给力的，身边的朋友们很好的帮我分担了压力！！！</p>

<p>功不可没的还得是我女朋友！在我最忙的时候，她向我提出了“能不能帮我看看我的论文”的需求，疯狂的激励了我的斗志！让我百分百高效。在这里给我可爱懂事温柔又好看的女朋友鞠一个🙇</p>

<p>我这个人是那种需要别人依靠我，然后表扬我实现一部分自我价值的人，每次她找我帮忙之后都会夸我，所以我还是挺喜欢这个过程的。</p>

<p>有一说一，情感的稳定会极大程度促进工作效率的提升，现在我俩谈恋爱的感觉就是相互惦记着彼此却又不会过分要求对方做出来点什么，偶尔给彼此一些小惊喜给这平凡的生活加上一点色彩。总之对我来说，这种恋爱的状态让我自己很舒服，很放松，也很享受。也许谈恋爱时间长了之后的异国恋就是这样的，平平淡淡真的很好。还有半个月就能回去见面喽，真的真的很期待时隔一年多的再聚。最近是白天想晚上也想，吃饭想睡觉也想，好希望异国恋能快点结束，回归普通生活呀。</p>

<p>然后就是说到家里人了。其实这部分没什么可说的，因为我一直都是给我爸妈打100分的。平淡生活我需要他们的时候，他们永远都会在视频电话那头陪着我，然后我的生活忙起来了他们也不会给我过多的家庭压力。很幸运自己有这样完美的原生家庭。这是每次结束一个大任务之后都会感慨的事情。我没见过更好的家庭氛围是什么样子的，我只知道我的这个家庭环境真的让我在需要努力的时候没有后顾之忧，甚至是我的助推器，能比他们做的还好的父母，我还没见过哈哈哈哈哈哈。</p>

<p>最后要说到朋友了。其实因为女朋友和家里人都很忙，很多时间的社交还都是跟关系比较铁的朋友们聊天的。我自己个人朋友也不多，一巴掌能数得过来了。这里还分两部分，一部分是现在物理上在一起的朋友，还一部分是精神上跟我同在的朋友。肉体同在的朋友们就没得说了，大家一起泡温泉吃烤肉逛超市溜景点，这听起来就快乐吧！！！精神同在的朋友们上基本每周都能聊一次的就算是关系非常好非常好的了。和MBTI一样的朋友聊天的那种心灵相通的感觉真的很省心，和生活方式不一样的朋友聊天真的很有新鲜感，和有时间去折腾我自己感兴趣的事情但是我自己却没时间折腾的朋友聊天能有一种身临其境自己也在折腾的快感，和每天工作在一线的好兄弟聊天能让住在异国乡村的我感受到浓浓的乡味。每天和他们聊天也让我觉得真的很快乐！</p>

<h3 id="其实还有关于我自己想说说还没想好这个留给下次吧">其实还有关于我自己想说说，还没想好，这个留给下次吧</h3>

<p>计划未来一段时间要参加期末考试，要去登顶富士山，要回国和亲戚朋友们面基！到时候关于自己肯定有很多可以说的，到时候再说吧！！！</p>]]></content><author><name>Wang Tongyu</name></author><category term="Thought" /><category term="Thought" /><summary type="html"><![CDATA[For those who do not understand Chinese]]></summary></entry><entry><title type="html">2023.06.28-I226课程相关</title><link href="https://sprzwty.github.io/curricular/I226%E8%AF%BE%E7%A8%8B%E7%9B%B8%E5%85%B3.html" rel="alternate" type="text/html" title="2023.06.28-I226课程相关" /><published>2023-06-28T00:00:00+00:00</published><updated>2023-06-28T00:00:00+00:00</updated><id>https://sprzwty.github.io/curricular/I226%E8%AF%BE%E7%A8%8B%E7%9B%B8%E5%85%B3</id><content type="html" xml:base="https://sprzwty.github.io/curricular/I226%E8%AF%BE%E7%A8%8B%E7%9B%B8%E5%85%B3.html"><![CDATA[<h2 id="网络层">网络层</h2>

<h3 id="扩展的以太网">扩展的以太网</h3>

<p>一、物理层拓展以太网</p>

<h4 id="冲突域">冲突域</h4>

<blockquote>
  <p>==冲突域（Collision Domain）==是一种物理分段，是指网络中一个站点发出的帧会与其他站点发出的帧产生碰撞或冲突的那部分网络。这些站点之间存在介质争用现象。</p>
</blockquote>

<h4 id="广播域">广播域</h4>

<blockquote>
  <p>==广播域==指接收同样广播消息的节点的集合，如：在该集合中的任何一个节点传输一个广播帧，则所有其他能收到这个帧的节点都被认为是该广播帧的一部分</p>
</blockquote>

<h4 id="用集线器扩展以太网">用集线器扩展以太网</h4>

<p>==优点==</p>

<p>①、使原来属于不同碰撞域的以太网上的计算机能够进行跨碰撞域的通信。</p>

<p>②、扩大了以太网覆盖的地理范围。</p>

<p>==缺点==</p>

<p>①、碰撞域增大了，但总的吞吐量并未提高。</p>

<p>②、如果不同的碰撞域使用不同的数据率，那么就不能用集线器将它们互连起来。</p>]]></content><author><name>Wang Tongyu</name></author><category term="Curricular" /><category term="Jaist" /><category term="Quiz" /><summary type="html"><![CDATA[网络层]]></summary></entry><entry><title type="html">2022.10.21-贰拾肆岁生日</title><link href="https://sprzwty.github.io/thought/%E8%B4%B0%E6%8B%BE%E8%82%86%E5%B2%81%E7%94%9F%E6%97%A5.html" rel="alternate" type="text/html" title="2022.10.21-贰拾肆岁生日" /><published>2022-10-21T00:00:00+00:00</published><updated>2022-10-21T00:00:00+00:00</updated><id>https://sprzwty.github.io/thought/%E8%B4%B0%E6%8B%BE%E8%82%86%E5%B2%81%E7%94%9F%E6%97%A5</id><content type="html" xml:base="https://sprzwty.github.io/thought/%E8%B4%B0%E6%8B%BE%E8%82%86%E5%B2%81%E7%94%9F%E6%97%A5.html"><![CDATA[<h1 id="致24岁的自己">致24岁的自己</h1>
<h2 id="不平凡的一岁">不平凡的一岁</h2>

<h2 id="令和四年秋时年弱冠有四壮志饥心遂远行千里离家去纵万般不舍欲留然意有不安亦有迷惘故以尽勉之无庸卑勿自矜固自信判不徒行万里去空道五原归">令和四年秋，时年弱冠有四。壮志饥心，遂远行千里离家去，纵万般不舍欲留。然意有不安亦有迷惘，故以尽勉之，无庸卑，勿自矜，固自信。判不徒行万里去，空道五原归。</h2>

<h2 id="过生日都干了点儿啥">过生日都干了点儿啥？</h2>

<p>上边随便瞎说点儿古文，看个乐呵。第一次国外一个人过生日，有点想法，也有点怂。奖励自己睡了个懒觉，然后中午吃个自助火锅喂饱自己，顺路去领个日本个人数字卡，回家路上看看风景，晚上和家里打了电话，隔空吹了蜡烛吃了蛋糕，睡前打开朋友新推荐的游戏玩儿了一把，和大饼打了个视频聊聊天，就这么过完了。平淡but开心。</p>

<p>收到了很多人送到的祝福，家人，大学的同学，学弟学妹，初高中的同学。。。不多，这些就是他们的身份罢了，除了家人，这些人在我这，都叫朋友。能有这些祝福，一个人在国外醒来翻看手机的时候，心里非常开心。</p>

<p>特别说一下有个特殊的礼物，今年上半年就送到我手里了，这里得特别提一嘴，用心到这个份上的朋友这年头不多见了，我很自豪我有这样的朋友。</p>

<h2 id="gap-year">Gap Year</h2>

<p>自己从23走到24，用流行点的词汇说说吧，这是我自己Gap的一年。怎么说呢，对自己刚刚度过的23岁前半是不太满意，但是后半部分逐渐迈上了正轨。23岁的前半沉浸在大学毕业的快乐之中，未曾踏实学习。这半年无所成长，枉费光阴。而23岁后半，逐渐认清了自己。开始读万卷书，也开始行万里路。</p>

<p>自己在家干点儿什么这个事儿，任谁听来都是很爽的规划，但是干点儿什么，就成为了一个十分值得探讨的话题。至于我，这一年中重新梳理了一下自己的知识体系。学习了一些专业方面的新知识，对NLP方向的研究有了个更深入的认识。但这都是小进步。正是这什么都没干的前半年，让我对’自己在家干点什么’这个事情有了深刻的认识。回头想想，这一年第一次自己搭建了自己的服务器，架设了自己的网站。跑通了网上现成的工程项目，也稍加改造弄清楚了这个项目是怎么运行的。不过这一年终究是慵懒的，这个慵懒让我对人生有了一个没经历过这个阶段的人都不会有的认识。</p>

<p><code class="language-plaintext highlighter-rouge">自己在家干点什么除了需要自制力，你需要更努力才能与世界接轨，需要更努力创造自己的目标计划，也需要更努力让自己追赶计划。</code></p>

<p>但是这要比在学校上学难太多了。</p>

<p>本科毕业后，任务导向型的工作在生活中的占比越来越少了。心中只有一个任务：修考成功。在学校这个任务只需要跟着老师上个课再查查资料基本上就完成了，而且在学校本身就是小社会，是很方便与世界接轨的。而自己一个人在家就不一样了。本就与众不同的留学计划加之疫情导致的社交限制，这让本身就稀缺的实体社交变得愈发困难。这意味着机会变少了，成功的难度当然就高了。前半年的我丝毫没认识到这个问题的存在，在家洋洋得意的睡懒觉打游戏虚度光阴。这段时间唯一做的让我发自内心觉得有意义的事情就是，我和妈妈的感情成数倍增加了。当然这也是人生中非常宝贵的财富。</p>

<p>后半年，按照剧情发展，应该是有件事情触动了我，让我突然意识到这样不行。但是现实生活不是这样的。我在现实生活中对于自己的认识很少存在”突发情况”，一般都是慢慢认识到。</p>

<p>2月，日本的NAIST修考预审核报名开启。2月16日，惠风和煦，坐在榻榻米上，对着屏幕辛苦一下午，以按下了邮件发送键结束。那个感觉特别好，是久违的努力的感觉。感觉自己要进入良性循环了！于是趁机努力，3月，4月，5月，6月。时间一晃就过去了。时间到了考试的那天。怎么说呢，好紧张，好难，好害怕。虽然我认为比较顺利的考完了。但是由于没能入教授的法眼，导致考试没合格。良性循环被打破了。得知没合格的那天真的难过的差点哭出来，但是这未免太丢脸了，有这精力还不如努努力下次的考试。这样就能合格了吧。截至发稿日，这一天仍还没有到来。我只希望自己能快点结束这种噩梦的备考期，早日合格。</p>

<p>8月，准备出国的我十分紧张，无论是学习压力还是出行压力都很大的我，不知不觉瘦了10斤。但是久违的一家人去了呼伦贝尔大草原旅游。这绝对是我今年过的最幸福的一段日子。一家人每天都在一起，看不同的风景，吃不一样的美食。时间很快就到了出国的日子。13号中午在家吃过烤牛排后，不舍得离开了家。离开家的时候，我是最后一个出门的。关门之前特意多看了看家里的样子，停顿了数秒，直到爸爸喊我的名字，才不舍得关上了门。下午一家人一同驱车来到T3，其实一路上我都是没有什么开心的心情的。看着四环路上和机场高速上的风景，听着爸爸对我的出国前最后一次当面教导，曾经日常的一切都变得依依不舍了起来。妈妈画了好看的妆，爸爸穿了好看的衣服，妹妹也拿出了最高品位的穿搭出门。这一切当然都是为了让我”体面地出国”。到了航站楼，办完托运，要进去安检了。我心里很清楚，这是一两年之内一家人唯一的一次团聚的时光了。出国学习这件事就算期再期待，也不能抵消掉离别时的情感。我们相拥并合照，珍惜这最后一点时间。</p>

<p>我哭了。</p>

<p>当然还是克制住了没有出声的。在疫情当下，很少有人出国，所以这种场面并不多见。全家人都哭了。没记错的话这应该是有史以来第一次全家人一同潸然泪下，到了最后分别的时间，道别过后，刷护照进入闸机，便头也没回坐上了滚梯，前往安检口。</p>

<p>“从现在开始你就是一个人生活啦！”这样告诉着自己，让自己鼓起勇气，面对即将发生的一切。好在行程顺利，8月14号成功到了东京的酒店，开启了一个人的国外生活。</p>

<p>10月，盼望已久的考试终于来了。认真准备，使尽浑身解数，完成了考试，盼望结果。</p>

<p>这一年也就发生了这些事情。可以说是此生最不寻常的一年了吧。</p>

<h2 id="24岁的期望">24岁的期望</h2>

<p>等到年末再来长篇大论吧，还要准备考试呢。这里就是希望自己可以快快合格有学上！虽然题目是致24岁的自己，但是好像全文都是在总结23岁这一年发生的事情。总结就是最好的”致”用这一年来致自己，诚意满满了。再来一点小期望，真的很舒服。就说这么多，下篇继续。</p>]]></content><author><name>Wang Tongyu</name></author><category term="Thought" /><category term="Thought" /><summary type="html"><![CDATA[致24岁的自己 不平凡的一岁]]></summary></entry><entry><title type="html">Jaist面试经验</title><link href="https://sprzwty.github.io/experience/Jaist%E9%9D%A2%E8%AF%95%E7%BB%8F%E9%AA%8C.html" rel="alternate" type="text/html" title="Jaist面试经验" /><published>2022-10-17T19:18:26+00:00</published><updated>2022-10-17T19:18:26+00:00</updated><id>https://sprzwty.github.io/experience/Jaist%E9%9D%A2%E8%AF%95%E7%BB%8F%E9%AA%8C</id><content type="html" xml:base="https://sprzwty.github.io/experience/Jaist%E9%9D%A2%E8%AF%95%E7%BB%8F%E9%AA%8C.html"><![CDATA[<h2 id="2022-10-15-jaist备考经验总结">2022-10-15 Jaist备考经验总结</h2>

<h3 id="需要准备的东西">需要准备的东西</h3>

<p>提前准备好两种颜色的粗头马克笔（面试过程中写在A4纸上给老师解释用），自己准备了一个muji的亚克力纸板夹，为了可以在镜头前写字✍️</p>

<h3 id="面试流程">面试流程</h3>
<p>面试考官人数：3人，50-60岁，教授🧑‍🏫</p>

<p>面试形式：线上面试，使用webex软件💻</p>

<p>第零部分：先进入准备房间，有考试接待官检查考试环境并确认考试的注意事项与考号等信息。确认完毕后等待考试开始。</p>

<p>第一部分【7min】：先陈述自己的Slide，时间很严格限制7分钟，在6分钟的时候有老师提醒还剩1分钟。整个过程老师中途不会打断。</p>

<p>第二部分【23min】：三位教授的自由提问。基本上每个教授都是轮番提问的。</p>

<h3 id="面试问题">面试问题</h3>

<ol>
  <li>发表相关的问题三位面试官依次提出
    <ol>
      <li>这里需要注意教授会针对slide的内容提出自己的想法，整体提问流程会非常长，他们自己会有对你这个东西的想法提出，所以一定要听清楚。听不清楚就直接要求再来一遍。</li>
      <li>教授提出的问题如果直接说不明白可以通过在准备好的白纸上通过画图的方式进行解释。</li>
      <li>教授会询问可行性的相关问题并对可行性给出自己的意见。</li>
      <li>创新点相关的问题比较多，一定要弄清楚自己的研究计划中的创新点在哪里。</li>
      <li>你的研究和你的意向教授现在的研究的共同点在哪里。</li>
      <li>请你说明你的研究中XXX是什么意思，XXX是怎么定义的？</li>
      <li>你这个研究可以解决什么样子的问题，未来可以在那里应用？》</li>
      <li>你为什么选择这个作为你的研究对象？</li>
      <li>。。。</li>
    </ol>
  </li>
  <li>询问与专业相关的问题，包括EntrySheet中提到的大学中最擅长的三门课之一，需要提前复习一下基本概念。</li>
  <li>询问最想在Jaist修哪门课程？（这个问题我因为没有提前了解所以没有回答出来）</li>
  <li>用英语描述一下你的研究是什么？</li>
  <li>。。。</li>
</ol>

<p>总计10余个问题，23分钟全部耗尽。</p>

<h3 id="面试氛围">面试氛围</h3>
<p>面试官不会故意抛出刁钻的问题进行提问，基本上全部的提问都是围绕着所发表的研究和提出的小论文的。</p>

<h3 id="后记">后记</h3>
<p>面试结束之后会直接让你退出房间，你点结束会议的一刹那面试就完成了。。</p>

<h3 id="自我反省">自我反省</h3>
<ol>
  <li>对于自己的PPT的时间掌握不好，应该整体节奏再加快一点。（最后的总结差一条没说的时候面试官提醒时间到）</li>
  <li>没有提前仔细了解学校的课程设置，导致这个问题没有回答上来。以后的种种面试需要避免这个问题。</li>
  <li>国外的面试需要尽可能准备好当地语言与英语的双语发言稿，以备不时之需。（临场发挥真的很紧张）</li>
  <li>7分钟的发表除去目录页应该把时间控制在8-9页的量比较合适，本次内容量为10页，稍显局促。</li>
  <li>所提交的小论文的覆盖面没有slide全面（小论文于面试前15天和出愿材料一并提出）</li>
  <li>小论文中没有标出引用参考文献，今后提出的书类文件要全部写明参考文件。</li>
  <li>继续反省，后续更新</li>
</ol>

<h3 id="ps">P.s.</h3>
<p>希望我的面试能让教授觉得过得去，让我可以合格！！！</p>

<h2>————————–</h2>
<h2 id="20221031更新">2022.10.31更新</h2>
<h3 id="北陆先端科学技术大学院大学jaist令和5年4月第二次入试合格">北陆先端科学技术大学院大学（JAIST）令和5年4月第二次入试合格💮</h3>]]></content><author><name>Wang Tongyu</name></author><category term="Experience" /><category term="Experience" /><summary type="html"><![CDATA[2022-10-15 Jaist备考经验总结]]></summary></entry><entry><title type="html">Midterm revising of I226</title><link href="https://sprzwty.github.io/test/I226Revise.html" rel="alternate" type="text/html" title="Midterm revising of I226" /><published>2022-06-30T00:00:00+00:00</published><updated>2022-06-30T00:00:00+00:00</updated><id>https://sprzwty.github.io/test/I226Revise</id><content type="html" xml:base="https://sprzwty.github.io/test/I226Revise.html"><![CDATA[<h2 id="quiz-01">Quiz-01</h2>

<h3 id="1-通信の形態unicast-multicast-broadcast-anycastについて各々どのようなものか説明してください">1. 通信の形態(unicast, multicast, broadcast, anycast)について、各々どのようなものか説明してください。</h3>
<ul>
  <li>
    <p><strong>unicast:</strong>　一対一の形で、特定の相手に伝送</p>
  </li>
  <li>
    <p><strong>multicast:</strong>　特定の論理的にグループのメンバー全体に伝送</p>
  </li>
  <li>
    <p><strong>broadcast:</strong>　放送の形で、(物理的に)届く範囲すべてに伝送</p>
  </li>
  <li>
    <p><strong>anycast:</strong>　特定のグループのメンバーのうちどれかに伝送</p>
  </li>
</ul>

<h3 id="2-全二重通信半二重通信単方向通信について例をあげて説明してください">2. 全二重通信、半二重通信、単方向通信について例をあげて説明してください。</h3>
<ul>
  <li>
    <p>単方向通信: 一方向にのみデータを伝送</p>
  </li>
  <li>
    <p>全二重通信: 双方向に同時データ伝送が可能</p>
  </li>
  <li>
    <p>半二重通信: 双方向にデータ伝送可能であるが同時には一方向のみ</p>
  </li>
</ul>

<h3 id="3-lanでよく使われるトポロジを3つあげ各々の性質を説明してください">3. LANでよく使われるトポロジを3つあげ、各々の性質を説明してください。</h3>

<ul>
  <li>バス：物全てのコンピュータが一本の通信路（バス）に接続されます。バス型トポロジは比較的簡単に実装でき、コストも低いです。バスに問題が生じると全体に被害が及ぶ。回線容量を分け合うことになる。</li>
  <li>リング：隣のノードとの接続を順次繰り返して輪をつくる，他のノードを経由して通信が行われる，一ケ所でも切れるとリングが成り立たなくなり、被害が全体に及ぶ，ノードの付け外しの際にはリングが切れる。</li>
  <li>スター：集線装置(ハブ)にノードを接続，ハブが壊れると全体に被害が及ぶが、線が切れても該 当するノードだけの問題で済む。ノードの付け外しはハブの許す限り自由，回線容量がどうなるかは集線装置次第。</li>
  <li>ツリー：集線装置(ハブ, コンセントレータ)にノードを接続し、ハブ を上位のハブに接続。スター同士の接続と考えることも可能だが、上下関係がある、スターと類似した性質だが、枝単位で運命共同体なのと、トラフィックの集約が起る。
*</li>
</ul>

<h3 id="完全結合バス型スター型リング型の各トポロジについてnノードを接続するのに必要なリンクの数を示して下さい">完全結合、バス型、スター型、リング型の各トポロジについて、nノードを接続するのに必要なリンクの数を示して下さい。</h3>
<div align="center">    
<img src="CleanShot 2023-06-15 at 23.33.46.png" style="zoom:30%" />
</div>
<p>完全結合型は図のようで、n(n-1)になりました；バス型はn、</p>

<h3 id="4交換という概念を簡単に説明してください">4.交換という概念を簡単に説明してください。</h3>

<h3 id="5回線交換とパケット交換について説明してください">5.回線交換とパケット交換について説明してください。</h3>

<h3 id="6-回線交換でコネクションレスな例およびパケット交換でコネクションオリエンテッドな例をあげてください">6. 回線交換でコネクションレスな例、およびパケット交換でコネクションオリエンテッドな例をあげてください。</h3>

<h3 id="7-lan-wan-manといった分類の基準を述べて下さい">7. LAN, WAN, MANといった分類の基準を述べて下さい。</h3>

<h3 id="8osi参照モデルが明確にした重要な概念にサービスインタフェースプロトコルがありますこれらを説明しその関係を図示して下さい">8.OSI参照モデルが明確にした重要な概念に、サービス、インタフェース、プロトコルがあります。これらを説明し、その関係を図示して下さい。</h3>

<h3 id="プロトコルスタックとは何ですか-またカプセル化という概念はプロトコルスタックでどのように用いられますか">・プロトコルスタックとは何ですか? また、カプセル化という概念はプロトコルスタックでどのように用いられますか?</h3>

<h3 id="osi参照モデルの各層の名前と役割を簡単にあげてください">・OSI参照モデルの各層の名前と役割を簡単にあげてください。</h3>

<h3 id="実際のコンピュータネットワークでは5層のモデルがよく使われますこの5層モデルについて各層の名称各層で取り扱うデータの単位各層で利用するアドレス各層の役割をあげてください">・実際のコンピュータネットワークでは5層のモデルがよく使われます。この5層モデルについて、各層の名称、各層で取り扱うデータの単位、各層で利用するアドレス、各層の役割をあげてください。</h3>

<h3 id="osi参照モデルにおけるサービスプリミティブについて図を用いて説明してください">・OSI参照モデルにおけるサービスプリミティブについて図を用いて説明してください。</h3>

<h2 id="quiz-02">Quiz-02</h2>
<h3 id="サンプリング定理とは何か説明してください">・サンプリング定理とは何か説明してください。</h3>

<h3 id="ノイズのある伝送路の最大伝送速度の理論的上限は信号対雑音比がr伝送路の帯域がbのときどのような式であらわされましたか-またこの式からわかることを説明してください">・ノイズのある伝送路の最大伝送速度の理論的上限は、信号対雑音比がR、伝送路の帯域がBのとき、どのような式であらわされましたか? また、この式からわかることを説明してください。</h3>

<h3 id="3khzの帯域を有する電話回線で信号対雑音比30dbのとき最大伝送速度の上限はどれくらいになりますか">・3KHzの帯域を有する電話回線で信号対雑音比30dBのとき、最大伝送速度の上限はどれくらいになりますか?</h3>

<h3 id="ベースバンド伝送方式とブロードバンド伝送方式の違いはどこにありましたかまた各々の特徴について説明して下さい">・ベースバンド伝送方式とブロードバンド伝送方式の違いはどこにありましたか。また、各々の特徴について説明して下さい。</h3>

<h3 id="変調とは何でしたか例を3つ挙げて説明して下さい">・変調とは何でしたか。例を3つ挙げて説明して下さい。</h3>

<h3 id="1シンボル当たりnビットの情報を持つbボーの伝送システムで転送速度をbitsecであらわすといくつになりますか">・1シンボル当たりnビットの情報を持つbボーの伝送システムで、転送速度をbit/Secであらわすといくつになりますか?</h3>

<h3 id="多重化とは何でしたかまた複数の例を挙げ各々について説明してください">・多重化とは何でしたか。また、複数の例を挙げ、各々について説明してください。</h3>

<h3 id="マンチェスタ符号の特徴をrz符号およびnrz符号と比較して述べてください">・マンチェスタ符号の特徴を、RZ符号およびNRZ符号と比較して述べてください。</h3>

<h3 id="同軸ケーブルとより対線を比較して特徴をあげてください">・同軸ケーブルとより対線を比較して特徴をあげてください。</h3>

<h3 id="光ファイバにはシングルモードファイバと呼ばれるものとマルチモードファイバと呼ばれるものがあります各々の原理と特徴を説明してください">・光ファイバにはシングルモードファイバと呼ばれるものとマルチモードファイバと呼ばれるものがあります。各々の原理と特徴を説明してください。</h3>

<h3 id="衛星通信の特徴を挙げてください">・衛星通信の特徴を挙げてください。</h3>

<h2 id="quiz-03">Quiz-03</h2>
<h3 id="1-データリンク層の役割を3つ以上挙げそれぞれについて説明してください">1. データリンク層の役割を3つ以上挙げ、それぞれについて説明してください。</h3>

<h3 id="2-ビット列からフレームを形成するためにはどのような方法がありましたか例を挙げて説明してください">2. ビット列からフレームを形成するためにはどのような方法がありましたか。例を挙げて説明してください。</h3>

<h3 id="3-データリンク層プロトコル規格の例を挙げてください">3. データリンク層プロトコル(規格)の例を挙げてください。</h3>

<h3 id="4-ieee8023とieee8025のメディアアクセス方式の違いを説明し特徴を挙げてください">4. IEEE802.3とIEEE802.5のメディアアクセス方式の違いを説明し、特徴を挙げてください。</h3>

<h3 id="5-ieee8023において最小フレーム長はどのように決定されたのでしょうか-具体的な数値を挙げて説明してください">5. IEEE802.3において、最小フレーム長はどのように決定されたのでしょうか? 具体的な数値を挙げて説明してください。</h3>

<h3 id="6-データリンク層アドレスがどのように使われるかについて説明してください">6. データリンク層アドレスがどのように使われるかについて説明してください。</h3>
<h2 id="quiz-04">Quiz-04</h2>
<h3 id="ネットワーク層の役割を説明してください">・ネットワーク層の役割を説明してください。</h3>

<h3 id="ネットワーク層アドレスとデータリンク層アドレスの違いを説明してください">・ネットワーク層アドレスとデータリンク層アドレスの違いを説明してください。</h3>

<h3 id="ipv4アドレスの表記方法について説明してくださいどのような標記が使われまた数値の範囲はどのようになりますか">・IPv4アドレスの表記方法について説明してください。どのような標記が使われ、また、数値の範囲はどのようになりますか?</h3>

<h3 id="ipv4アドレスにおけるクラスとサブネットという概念について各々説明してください">・IPv4アドレスにおけるクラスとサブネットという概念について各々説明してください。</h3>

<h3 id="ルーティングテーブルについて簡単なネットワーク例を挙げて説明してください">・ルーティングテーブルについて、簡単なネットワーク例を挙げて説明してください。</h3>

<h3 id="arpおよびrarpの役割について説明してください">・ARPおよびRARPの役割について説明してください。</h3>
<h2 id="quiz-05">Quiz-05</h2>
<h3 id="ルーターブリッジリピーターについて役割や特徴について述べてくださいまた各々プロトコルスタックのどの層の装置と考えることができるでしょうか">・ルーター、ブリッジ、リピーターについて、役割や特徴について述べてください。また、各々、プロトコルスタックのどの層の装置と考えることができるでしょうか?</h3>

<h3 id="ブリッジの動作について説明してください具体的なネットワーク例をあげフォワーディングテーブルがどのように変化するかについても言及してください">・ブリッジの動作について説明してください。具体的なネットワーク例をあげ、フォワーディングテーブルがどのように変化するかについても言及してください。</h3>

<h3 id="ルーターの動作をフレームが入ってきてからフレームを送信するまで順を追って説明してください">・ルーターの動作をフレームが入ってきてからフレームを送信するまで順を追って説明してください。</h3>

<h3 id="複数のルーターをまたがってipパケットが転送される様子を順を追って説明してくださいこのとき特にmacアドレスに注意して説明してください">・複数のルーターをまたがってIPパケットが転送される様子を順を追って説明してください。このとき、特にMACアドレスに注意して説明してください。</h3>

<h3 id="ipプロトコルのデフォルトルートという概念について説明しこれがどのような効果をもたらすのか説明してください">・IPプロトコルのデフォルトルートという概念について説明し、これがどのような効果をもたらすのか説明してください。</h3>

<h3 id="samplenetの図を使い以下の問いに答えて下さい">・”SampleNet”の図を使い、以下の問いに答えて下さい</h3>

<ol>
  <li>
    <p>同一のネットワークアドレスを有する範囲を示し、各々アドレスを設定して
ください。</p>
  </li>
  <li>
    <p>図中のブロードキャストドメインとコンテンションドメインを示して下さい。</p>
  </li>
  <li>
    <p>各々のルーターについて、1.でつけたアドレスを用いて経路表を作成してください。
但し、ポートは若い番号のついているものから順に1,2,…,nとしてください。</p>
  </li>
  <li>
    <p>host Aではダイナミックルーティングを行なうプログラムが動いており、経
路表を作成しているとした場合、どのような表ができているでしょうか。3.同様
に示して下さい。</p>
  </li>
  <li>
    <p>この構成のネットワークをルーターを使わず、ブリッジだけで構成すること
は可能でしょうか? 問題があれば、それを解決するための方法を示して下さい。
また、ルーターを使った場合との違いを説明してください。</p>
    <h2 id="quiz-06">Quiz-06</h2>
    <h3 id="1-トランスポート層の役割を説明してください">1. トランスポート層の役割を説明してください。</h3>
  </li>
</ol>

<h3 id="2-tcpとudpがアプリケーション層に提供するサービスの違いについて述べてください">2. TCPとUDPがアプリケーション層に提供するサービスの違いについて述べてください。</h3>

<h3 id="3-コネクションのある通信を実現するためにはどのような仕組みが必要となりますか">3. コネクションのある通信を実現するためには、どのような仕組みが必要となりますか。</h3>

<h3 id="4-コネクションの確立や解放が直感的に思われるほど容易ではないのはなぜですか-例を挙げて説明してください">4. コネクションの確立や解放が直感的に思われるほど容易ではないのはなぜですか? 例を挙げて説明してください。</h3>

<h3 id="5-3-way-hand-shakeについて説明してください">5. 3-way hand shakeについて説明してください。</h3>

<h3 id="6-エンドツーエンドのフロー制御と輻輳制御の違いについて説明してください">6. エンドツーエンドのフロー制御と輻輳制御の違いについて説明してください。</h3>

<h3 id="7-tcpにおけるフロー制御および輻輳制御の方法について具体的に説明してください">7. TCPにおけるフロー制御および輻輳制御の方法について具体的に説明してください。</h3>

<h3 id="8-tcpにおけるスループットを決める要因について説明してください">8. TCPにおけるスループットを決める要因について説明してください。</h3>

<h3 id="9-udpの特徴とudpを利用したアプリケーション例をあげ具体的なヘッダの構造を示してください">9. UDPの特徴と、UDPを利用したアプリケーション例をあげ、具体的なヘッダの構造を示してください。</h3>]]></content><author><name>Wang Tongyu</name></author><category term="test" /><category term="Jaist" /><category term="Quiz" /><summary type="html"><![CDATA[Quiz-01]]></summary></entry><entry xml:lang="en"><title type="html">Test en</title><link href="https://sprzwty.github.io/test/test-en.html" rel="alternate" type="text/html" title="Test en" /><published>2022-04-29T10:50:00+00:00</published><updated>2022-04-29T10:50:00+00:00</updated><id>https://sprzwty.github.io/test/test-en</id><content type="html" xml:base="https://sprzwty.github.io/test/test-en.html"><![CDATA[<h2 id="chapter-1">Chapter 1</h2>

<p>This is a test paragraph for internalization.</p>]]></content><author><name>zhonger</name></author><category term="test" /><category term="mathjax" /><summary type="html"><![CDATA[Chapter 1]]></summary></entry><entry><title type="html">H2O-ac theme for Jekyll</title><link href="https://sprzwty.github.io/tech/new-theme-h2o-ac.html" rel="alternate" type="text/html" title="H2O-ac theme for Jekyll" /><published>2021-12-22T11:50:00+00:00</published><updated>2021-12-22T11:50:00+00:00</updated><id>https://sprzwty.github.io/tech/new-theme-h2o-ac</id><content type="html" xml:base="https://sprzwty.github.io/tech/new-theme-h2o-ac.html"><![CDATA[<h2 id="前言">前言</h2>

<p>  正如大家所知，Jekyll 是一款高可定制的、非常流行的静态博客生成工具。围绕着 Jekyll 也衍生出了很多优秀的 Jekyll 主题， 由 <a href="https://github.com/kaeyleo">廖柯宇</a> 开发的 <a href="https://github.com/kaeyleo/jekyll-theme-H2O">H2O</a> 主题就是其中之一。极简主义、风格扁平化、卡片式布局、Medium 及知乎专栏的视觉风格等等特点，为我们带来了或许是迄今为止最漂亮的 Jekyll 主题。</p>

<p>  诞生之初，H2O 主题就在 Github 平台上以 MIT 许可证协议开放了源代码。这吸引了很多小伙伴纷纷转投 Jekyll 和 H2O 主题的阵营，本人也是其中之一。随着使用者越来越多，不少的小伙伴在使用过程中发现了一些小问题并主动修复，最后贡献到了 H2O 的主项目，这让 H2O 主题变得更好。本人在使用过程中也的确是发现了一些与自己实际需求不大一致的地方，并且在原 H2O 主题的基础上做了一些改动。考虑到这些改动可能并不是大多数人的需求，直接向原 H2O 主题提交 pull 请求合并的必要性不大，因此决定将原项目 fork 并改名。现正式将源代码以与 H2O 主题相同的 MIT 许可证协议在 Github 平台上公开，新项目地址为 <a href="https://github.com/zhonger/jekyll-theme-H2O-ac">zhonger/jekyll-theme-H2O-ac</a>。</p>

<p>  在此，非常感谢廖柯宇及其他小伙伴对于 H2O-ac 主题的基础主题 H2O 的代码开发和开放共享。</p>

<h2 id="新特性">新特性</h2>

<h3 id="更适合学术人和运维程序员的页面结构">更适合学术人和运维程序员的页面结构</h3>

<p>  H2O 主题其实在很大程度上已经满足了大部分人的需求，只是对于学术研究人员和运维程序员来说，个人觉得页面结构还是有点不够合适。学术研究人员比较重视在首页直接展示个人信息和研究情况，能够让人很快地了解到所需的信息，这其实是将 About me 这样一个平常的辅助页面当成了主页面来用。另外，运维程序员比较重视能一览所有文章的标题以迅速找到感兴趣的文章。虽然搜索功能、标签页、卡片展示页都能够列出所有的文章，但个人觉得还是不够简洁、方便。而像 Hexo 静态生成工具自带的 Archive 归档页面比较能满足这样的需求。除此之外，整个博客的系统日志变迁记录对于运维程序员来说也非常重要，毕竟如果通过发布一篇文章来描述变迁过程并不适合联系起来完整了解。如果有系统日志页，就可以按照年份、月份、事件的先后进行简要的描述，并且一览无遗。</p>

<p>  因此，在 H2O-ac 主题中，从原来 H2O 的主页中抽出框架做成了页面模板。根据实际页面的内容需求，增加了<strong>学术首页</strong>、<strong>归档页</strong>和<strong>系统日志页</strong>。</p>

<h4 id="学术首页">学术首页</h4>

<p>  学术首页如下图所示，并将原来 H2O 中的卡片首页移动到 blog 子目录下了。如果读者想要看到文章卡片展示页，还是可以点击顶部的导航栏中的 BLOG 直接访问。</p>

<p><img src="https://i.luish.cc/blog/XyT038.webp" alt="首页 Home" /></p>

<h4 id="归档页">归档页</h4>

<p>  归档页设置为由 Jekyll 按照模板自动生成，以年份、日期、文章标题分级列表展示，简洁清晰。</p>

<p><img src="https://i.luish.cc/blog/lj4vUP.webp" alt="归档页 Archives" /></p>

<h4 id="系统日志页">系统日志页</h4>

<p>  系统日志页其实也不是经常更新的，只有在博客整体作出设置或改进的才加以说明。另外，也可以将一些固定的站点信息放置在系统日志页，比如站点的多点部署信息，读者可以根据此信息访问最快、最合适的节点。</p>

<p><img src="https://i.luish.cc/blog/7QLEc6.webp" alt="系统日志 Log" /></p>

<h3 id="使用体验提升">使用体验提升</h3>

<p>  廖柯宇也在 H2O 主题的默认页面中写道，目前 H2O 主题还有一些可优化的内容，比如夜间模式、查看大图等。这里，根据个人的一些实际需求和了解，在 H2O-ac 主题中做了调整。</p>

<h4 id="社交图标扩展">社交图标扩展</h4>

<p>  H2O 原有的社交图标其实已经比较广泛，只是还有些领域局限性，比如学术研究人员可能更希望展示谷歌学术、ResearchGate、ORCID 等社交图标及链接，而运维开发人员可能更希望展示 SegmentFault、CSDN、博客园等社交图标及链接。这里在 H2O 提供的社交图标类型基础上做了这些平台图标的扩充，同时尝试了 Symbol 引用的方式来实现社交图标鼠标悬停的效果，从而简化代码（H2O 采用的是字体图标的方式，需要为每一个社交图标定义不同的主题色）。</p>

<p><img src="https://i.luish.cc/blog/UpnQdk.webp" alt="社交图标 SNS" /></p>

<h4 id="查看大图">查看大图</h4>

<p>  查看大图功能的确对于读者的阅读体验来说有很大的提升。就像我们阅读文献一样，可能首先会只看文章附图来大致掌握文章的核心点。博文的查看大图功能也可能有这样的异曲同工之妙。这里是采用的 <a href="https://fancyapps.com/docs/ui/fancybox">Fancybox</a> 插件实现的。H2O-ac 主题中只使用了最简单的配置，用户可以根据需求查看文档做出更多的修改。</p>

<p><img src="https://i.luish.cc/blog/BzfBoz.webp" alt="查看大图 Fancybox" /></p>

<p>(2022年4月30日更新)</p>

<p>  由于 fancybox 库作者对原使用的 v3.5.7 版本不再进行维护和更新，现将版本更新至新的 v4.0 版本，即 <a href="https://github.com/fancyapps/ui">fancyapps/ui</a>。另，新增将 alt 内容作为图片的描述显示在 fancybox 中。</p>

<h4 id="深色模式切换按钮">深色模式切换按钮</h4>

<p>(2022年4月30日更新)</p>

<p>  原来 H2O 主题的深色模式切换需要在 _config.yml 文件中配置开启，并且只能在固定时间段使用。此次更新在页面右上角提供了深色/浅色模式一键切换按钮，如下图所示。由于更新了深色模式采用 cookie 的方式来确定，此深色模式切换按钮可以与原来的深色模式配置共存。</p>

<p><img src="https://i.luish.cc/blog/EPhFN9.webp" alt="浅色模式 Day mode" /></p>

<p><img src="https://i.luish.cc/blog/BD7BqC.webp" alt="深色模式 Night mode" /></p>

<h4 id="提示框">提示框</h4>

<p>(2022年4月30日更新)</p>

<p>  通过引入 <a href="https://github.com/lazee/premonition">lazee/premonition</a> 库新增五种提示框：笔记、提示、警告、错误、引用，完全兼容原生 Markdown 语法，并对样式进行了主题适应。以下为五种提示框的实际效果。</p>

<div class="premonition note"> <div class="header"> <svg class="icon note" aria-hidden="true"> <use xlink:href="#icon-note"></use> </svg> <div class="title"> Note </div> </div> <div class="content"> <p>The body of the note goes here. Premonition allows you to write any <code class="language-plaintext highlighter-rouge">Markdown</code> inside the block.</p>



 </div> </div>
<div class="premonition info"> <div class="header"> <svg class="icon info" aria-hidden="true"> <use xlink:href="#icon-info"></use> </svg> <div class="title"> 小提示 </div> </div> <div class="content"> <p>The body of the info goes here. Premonition allows you to write any <code class="language-plaintext highlighter-rouge">Markdown</code> inside the block.</p>



 </div> </div>
<div class="premonition warning"> <div class="header"> <svg class="icon warning" aria-hidden="true"> <use xlink:href="#icon-warning"></use> </svg> <div class="title"> Warning </div> </div> <div class="content"> <p>The body of the warning goes here. Premonition allows you to write any <code class="language-plaintext highlighter-rouge">Markdown</code> inside the block.</p>



 </div> </div>
<div class="premonition error"> <div class="header"> <svg class="icon error" aria-hidden="true"> <use xlink:href="#icon-error"></use> </svg> <div class="title"> Error </div> </div> <div class="content"> <p>The body of the error goes here. Premonition allows you to write any <code class="language-plaintext highlighter-rouge">Markdown</code> inside the block.</p>



 </div> </div>
<div class="premonition citation"> <div class="header"> <svg class="icon citation" aria-hidden="true"> <use xlink:href="#icon-citation"></use> </svg> </div> <div class="content"> <p>To be or not to be is a question.</p>



 </div> <div class="ref"> ------ 莎士比亚 </div> </div>
<h4 id="代码高亮优化">代码高亮优化</h4>

<p>  本人使用 H2O 主题的时候代码高亮功能还是沿用的 Jekyll 自带的，后来 H2O 主题也开始采用了 <a href="https://prismjs.com/">Prism.js</a>。不过由于使用的是 <code class="language-plaintext highlighter-rouge">OKAIDIA</code> 高亮主题，所以有些段落中的格式化字段显示上有些问题。这里，仍然采用默认主题，并且扩增到 Prism.js 支持的所有编程语言类型。效果可以从前一句的 OKAIDIA 字段和下面即将出现的代码片段看出。</p>

<div class="language-css highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">@font-face</span> <span class="p">{</span>
  <span class="nl">font-family</span><span class="p">:</span> <span class="s2">'Merriweather'</span><span class="p">;</span>
  <span class="nl">src</span><span class="p">:</span> <span class="n">local</span><span class="p">(</span><span class="s2">'Merriweather'</span><span class="p">),</span> <span class="sx">url(https://fonts.gstatic.com/...)</span> <span class="n">format</span><span class="p">(</span><span class="s2">'woff2'</span><span class="p">);</span>
<span class="p">}</span>
</code></pre></div></div>

<p>(2022年5月14日更新)</p>

<p>  更换 Prism 库加载方式，采用按需自动加载代码类型，尽可能减少因 Prism 造成的阻塞。修复了某些样式问题。增加显示行数支持、官方主题选择支持。如下所示可以进行设置，具体主题风格样式可以访问 <a href="https://prismjs.com/">Prism 官网</a> 了解更多。</p>

<p>(2022年5月23日更新)</p>

<p>  除官方代码库中默认代码主题外，新增扩展代码主题支持，比如常用的 One Light 等等。具体主题风格样式可以查看 <a href="https://github.com/PrismJS/prism-themes/tree/master/themes">PrismJS/prism-themes</a> 了解更多。</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Prism</span>
<span class="na">prism</span><span class="pi">:</span>
  <span class="na">theme</span><span class="pi">:</span> <span class="s">tomorrow</span>
  <span class="na">line_numbers</span><span class="pi">:</span> <span class="kc">true</span>
</code></pre></div></div>

<h4 id="代码复制">代码复制</h4>

<p>(2022年5月1日更新)</p>

<p>  由于主题设置有复制自动添加版权保护文字，导致复制代码或无法直接使用。但是如果直接去掉版权保护又不大合适，于是新增代码复制功能。当使用如下所示代码片段右上角的复制按钮时，代码会被复制到粘贴板，且不包含版权保护文字，可以放心直接使用。</p>

<p>(2022年5月14日更新)</p>

<p>  调整复制按钮位置，自动识别代码块的代码类型并显示。</p>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">&lt;!-- Target --&gt;</span>
<span class="nt">&lt;input</span> <span class="na">id=</span><span class="s">"foo"</span> <span class="na">value=</span><span class="s">"https://github.com/zenorocha/clipboard.js.git"</span><span class="nt">&gt;</span>

<span class="c">&lt;!-- Trigger --&gt;</span>
<span class="nt">&lt;button</span> <span class="na">class=</span><span class="s">"btn"</span> <span class="na">data-clipboard-target=</span><span class="s">"#foo"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;img</span> <span class="na">src=</span><span class="s">"assets/clippy.svg"</span> <span class="na">alt=</span><span class="s">"Copy to clipboard"</span><span class="nt">&gt;</span>
<span class="nt">&lt;/button&gt;</span>
</code></pre></div></div>

<h4 id="文章置顶功能">文章置顶功能</h4>

<p>(2022年5月26日更新)</p>

<p>  鉴于现有的 Jekyll 文章置顶库有点年久失修，决定徒手实现了一下文章置顶功能。具体文章列表页和归档页置顶效果如下所示：</p>

<p><img src="https://i.luish.cc/blog/mcF2Z3.webp" alt="文章置顶 Top acticles" />
<img src="https://i.luish.cc/blog/yajcoi.webp" alt="归档页文章置顶 Top acticles in archives" /></p>

<h4 id="分页依赖升级">分页依赖升级</h4>

<p>(2022年5月26日更新)</p>

<p>  由于原有的 jekyll-paginate 库已停止更新，所以升级到目前更新、维护活跃的 <a href="https://github.com/sverrirs/jekyll-paginate-v2">jekyll-paginate-v2</a> 库。原有的分页配置自 v1.1.7 版本后无法使用，请更换为如下类似设置：</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># _config.yml 旧配置</span>
<span class="na">paginate</span><span class="pi">:</span> <span class="m">10</span>
<span class="na">paginate_path</span><span class="pi">:</span> <span class="s1">'</span><span class="s">blog/page:num'</span>

<span class="c1"># _config.yml 新配置</span>
<span class="na">pagination</span><span class="pi">:</span>
  <span class="na">enabled</span><span class="pi">:</span> <span class="kc">true</span>
  <span class="na">per_page</span><span class="pi">:</span> <span class="m">10</span>
  <span class="na">permalink</span><span class="pi">:</span> <span class="s1">'</span><span class="s">page:num/'</span>
</code></pre></div></div>

<p>  另外，blog/index.html 的头部信息中应该加上如下<strong>启用分页</strong>的配置。否则，jekyll-paginate-v2 不会主动工作。</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">pagination</span><span class="pi">:</span> 
  <span class="na">enabled</span><span class="pi">:</span> <span class="kc">true</span>
</code></pre></div></div>

<h4 id="封面图片作者及链接">封面图片作者及链接</h4>

<p>(2022年5月26日更新)</p>

<p>  一直以来封面图片都是来自 <a href="https://unsplash.com">Unsplash</a> 的免费高清图片，为了表明封面图片的来源和作者，现在文章的元信息中添加了对封面图片作者及链接的支持。如果想要声明，可以直接在文章的头部信息中添加如下配置：</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="s">......</span>
<span class="na">cover</span><span class="pi">:</span> <span class="s1">'</span><span class="s">'</span>
<span class="na">cover_author</span><span class="pi">:</span> <span class="s1">'</span><span class="s">'</span>
<span class="na">cover_author_link</span><span class="pi">:</span> <span class="s1">'</span><span class="s">'</span>
<span class="s">......</span>
</code></pre></div></div>

<p>  非文章的页面中也可以像上面那样声明相关的封面作者及链接，效果如下所示：</p>

<p><img src="https://i.luish.cc/blog/fzWjPs.webp" alt="页面封面图片信息 Cover author for pages" /></p>

<h4 id="字数统计及阅读时间估计">字数统计及阅读时间估计</h4>

<p>  字数统计及阅读时间估计这个小功能其实以前在用 WordPress 的时候比较常见。虽然说统计和估计的结果不一定完全准确，但是还是起到了一定的辅助阅读的作用。效果可以查看本页标题下的基本信息区域。</p>

<h4 id="时间本地化与最近更新时间">时间本地化与最近更新时间</h4>

<p>(2022年5月22日更新)</p>

<p>  为了支持来自不同时区的读者直接可以看到文章发布对应的本地时间，现已利用 dayjs 新增<strong>时间本地化</strong>功能。并利用 Github API 查询页面的最近一次 commit 更新时间作为文章<strong>最近更新时间</strong>。效果如下图所示。</p>

<p><img src="https://i.luish.cc/blog/Anb4xH.webp" alt="构建位置时区 Jekyll deployment timezone" />
<img src="https://i.luish.cc/blog/NMPXmQ.webp" alt="读者时区 Reader timezone" /></p>

<p>  如需使用<strong>最近更新时间</strong>功能，务必在 _config.yml 文件中添加以下配置项：</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Github</span>
<span class="na">github</span><span class="pi">:</span>
  <span class="na">enabled</span><span class="pi">:</span> <span class="kc">true</span>
  <span class="na">owner</span><span class="pi">:</span> <span class="s">github_username</span>
  <span class="na">repository</span><span class="pi">:</span> <span class="s">github_project_name</span>
</code></pre></div></div>

<p>  如未正确进行以上配置，默认会将最近更新时间与发布时间保持一致。</p>

<h4 id="版权显式声明">版权显式声明</h4>

<p>(2022年5月18日更新)</p>

<p>  之前的版本只会在页面底部的信息栏中显示一个 CC 4.0 的小图标，不是很醒目。根据调研其他静态网站主题，发现一般都会在文章的末尾自动生成一个比较醒目的版权声明。另外，在版权声明中也将根据最近更新时间来判断内容是否可能过时。如果最近更新时间距离当前时间大于 365 天，则会显示具体日期并提醒有内容过时的可能。效果如下所示。</p>

<p><img src="https://i.luish.cc/blog/scNRyd.webp" alt="版权显式声明 Copyright" />
<img src="https://i.luish.cc/blog/C8RWtL.webp" alt="内容可能过时提醒 Long time ago notification" /></p>

<h4 id="文章侧边索引导航">文章侧边索引导航</h4>

<p>(2022年1月9日更新)</p>

<p>  在一些基于 Bootstrap 前端框架的 Jekyll 主题中，这个功能比较常见。由于本主题未使用 Bootstrap 前端框架，所以添加起来稍微有些麻烦，现已增加此功能。在浏览器窗口超过 1050 px 的情况下，在文章页面可以正常看到右侧的文章侧边索引导航。当窗口滑动时，侧边索引导航也会跟着滑动。在浏览器窗口不足 1050 px 的情况下，侧边索引导航自动隐藏。在 _config.yml 配置文件中，可以通过设置 <code class="language-plaintext highlighter-rouge">toc: false</code> 来全局禁用此功能。</p>

<p>(2022年4月30日更新)</p>

<p>  在原来的基础上增加了跟随左侧内容滑动高亮。当左侧内容向上或向下滑动时，右侧索引导航将会使对应的对应一级标题高亮。</p>

<p>(2022年5月14日更新)</p>

<p>  为文章的移动端页面添加了索引导航按钮。鉴于单页面的内容有限及侧边位置空间有限，暂未对单页面进行支持。</p>

<h4 id="支持-waline-评论系统">支持 Waline 评论系统</h4>

<p>  目前已支持基于 Valine 衍生的简洁、安全的评论系统 Waline。可以根据官方提供的 <a href="https://waline.js.org/guide/get-started.html">快速上手</a> 进行配置，以下为 _config.yml 中需要配置的内容：</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># _config.yml</span>

<span class="na">comments</span><span class="pi">:</span>
  <span class="na">waline</span><span class="pi">:</span> <span class="kc">true</span>
  <span class="na">waline_url</span><span class="pi">:</span> <span class="s">https://xxxxxx.vercel.app</span>
</code></pre></div></div>

<p>  <del>目前未对多评论系统同时支持进行优化，所以如果 Disqus 和 Waline 同时开启时，Disqus 在前 Waline 在后同时出现。如果用户环境无法访问 Disqus 即只能看到 Waline。</del></p>

<p>(2022年5月22日更新)</p>

<p>  新增多评论切换按钮：当同时使用 Disqus 和 Waline 时，会在评论区域的右上角看到一个左右滑动切换按钮。如下所示，从左往右滑动即可从 Disqus 切换到 Waline。</p>

<p>  同时修复了手动切换深色模式时 Disqus 不会自动切换模式而造成的显示问题。目前在模式切换时 Disqus 会主动进行重新加载以适应当前模式。</p>

<p><img src="https://i.luish.cc/blog/WBgbUB.webp" alt="Disqus 评论系统 Disqus comment" />
<img src="https://i.luish.cc/blog/45JQ9H.webp" alt="Waline 评论系统 Waline comments" /></p>

<h4 id="支持-pwa">支持 PWA</h4>

<p>(2022年5月11日更新)</p>

<p>  全面支持 PWA，访问速度得到较大提升。移动端访问可以像原生 APP 那样使用。如果访问过全站一遍之后，则可以完全离线使用。如下所示，可以配置 PWA 的主题色和短名称。</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># PWA</span>
<span class="na">pwa</span><span class="pi">:</span>
  <span class="na">color</span><span class="pi">:</span> <span class="s1">'</span><span class="s">#81BBFF'</span>
  <span class="na">short_name</span><span class="pi">:</span> <span class="s1">'</span><span class="s">lisz'</span>
</code></pre></div></div>

<h4 id="支持-mermaid">支持 Mermaid</h4>

<p>(2022年8月29日更新)</p>

<p>  不少同学可能会有在文章中放置流程图的需求，为了满足这一需求，现添加了 <a href="https://mermaid-js.github.io/mermaid/#/">Mermaid</a> 来支持像写代码一样画图。</p>

<p>  为了兼容 Markdown 语法，这里采用了自定义的代码类型。当代码类型为 <code class="language-plaintext highlighter-rouge">mermaid</code> 时，PrismJS 会自动以代码的形式美化展示；当代码类型为 <code class="language-plaintext highlighter-rouge">mermaid2</code> 时，页面会自动使用 Mermaid 画成图展示出来，如下所示。</p>

<p>  考虑到页面宽度有限，Mermaid 所画出的甘特图等其他比较大一点的图不太好看，也增加了<strong>放大重绘</strong>的功能。如下所示，点击图的右上角的按钮即可全屏查看大图。</p>

<pre><code class="language-mermaid">graph TD;
    A--&gt;B;
    A--&gt;C;
    B--&gt;D;
    C--&gt;D;
</code></pre>

<pre><code class="language-mermaid2">    graph TD;
    A--&gt;B;
    A--&gt;C;
    B--&gt;D;
    C--&gt;D;
</code></pre>

<pre><code class="language-mermaid2">    gantt
      title A Gantt Diagram
      dateFormat x
      axisFormat %L
      section Section
      A task           :a1, 0, 30ms
      Another task     :after a1, 20ms
      section Another
      Another another task      :b1, 20, 12ms
      Another another another task     :after b1, 24ms
</code></pre>

<pre><code class="language-mermaid2">    gantt
    dateFormat  YYYY-MM-DD
    title       Adding GANTT diagram functionality to mermaid
    excludes    weekends
    %% (`excludes` accepts specific dates in YYYY-MM-DD format, days of the week ("sunday") or "weekends", but not the word "weekdays".)

    section A section
    Completed task            :done,    des1, 2014-01-06,2014-01-08
    Active task               :active,  des2, 2014-01-09, 3d
    Future task               :         des3, after des2, 5d
    Future task2              :         des4, after des3, 5d

    section Critical tasks
    Completed task in the critical line :crit, done, 2014-01-06,24h
    Implement parser and jison          :crit, done, after des1, 2d
    Create tests for parser             :crit, active, 3d
    Future task in critical line        :crit, 5d
    Create tests for renderer           :2d
    Add to mermaid                      :1d
    Functionality added                 :milestone, 2014-01-25, 0d

    section Documentation
    Describe gantt syntax               :active, a1, after des1, 3d
    Add gantt diagram to demo page      :after a1  , 20h
    Add another diagram to demo page    :doc1, after a1  , 48h

    section Last section
    Describe gantt syntax               :after doc1, 3d
    Add gantt diagram to demo page      :20h
    Add another diagram to demo page    :48h
</code></pre>

<h4 id="配置项">配置项</h4>

<p>  配置项中新增了<strong>友情链接</strong>和<strong>备案号</strong>功能，可以直接在 _config.yml 文件的对应配置项下设置即可，如下所示。友情链接主要是方便跟其他博主交换友链，备案号主要是为了方便部署在国内需备案的 vps 或虚拟主机上。此处，二者都可以置空。</p>

<p>(2022年4月30日更新)</p>

<p>  新增<strong>全站一键灰度化功能</strong>、<strong>时间格式</strong>配置。在国家公祭日等需要灰度化以示哀悼的时候可以将灰度化配置设置为 true，平常使用默认配置 false。时间格式这里一共提供了 3 种：第一种中英文站点使用皆宜，第二种适用于英文站点，第三种适用于中文站点。默认时间格式为第一种。</p>

<p>(2022年5月14日更新)</p>

<p>  新增 <a href="https://busuanzi.ibruce.info/"><strong>不蒜子</strong></a> 统计方式，可以显示全站访问次数、全站访问用户数、文章页面阅读量。如下设置可以开启。</p>

<p>(2022年5月16日更新)</p>

<p>  新增 <a href="https://github.com/mikecao/umami"><strong>umami</strong></a> 统计方式，需要自行先搭建 umami 然后接入。接入配置只需要如下所示配置跟踪 id 和 JS 脚本地址。</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Links 友情链接</span>
<span class="na">links</span><span class="pi">:</span>
  <span class="s1">'</span><span class="s">Mr</span><span class="nv"> </span><span class="s">Li'</span><span class="err">:</span> <span class="s1">'</span><span class="s">https://lisz.me'</span>

<span class="c1"># Beian 备案号</span>
<span class="na">beian</span><span class="pi">:</span> <span class="s1">'</span><span class="s">沪ICP备xxxxxxxx号'</span>

<span class="c1"># Gray 灰度化</span>
<span class="na">gray</span><span class="pi">:</span> <span class="kc">true</span>

<span class="c1"># Time format 时间格式 </span>
<span class="c1"># 0 -- 2022-04-29    1 -- 29 Apr 2022   2 -- 2022年4月29日</span>
<span class="na">formats</span><span class="pi">:</span>
  <span class="na">time</span><span class="pi">:</span> <span class="s">0</span> 

<span class="c1"># Busuanzi Analytics</span>
<span class="na">busuanzi</span><span class="pi">:</span> <span class="kc">true</span>

<span class="c1"># Umami Analytics</span>
<span class="na">umami</span><span class="pi">:</span>
  <span class="na">status</span><span class="pi">:</span> <span class="kc">true</span>
  <span class="na">id</span><span class="pi">:</span> <span class="s">xxxxxxxxxxxxx</span>
  <span class="na">js</span><span class="pi">:</span> <span class="s">https://umami.example.com/umami.js</span>
</code></pre></div></div>

<h4 id="前端自动构建工作流优化">前端自动构建工作流优化</h4>

<p>  H2O 主题中使用了 Gulp + <del>Node-Sass</del> Sass 的方案来自动化前端构建工作流。不得不说，这个方案还是很不错的，只是随着 Gulp 和 <del>Node-Sass</del> Sass 版本的更新，对 NodeJS 环境及其他依赖库都有一些要求。这里，H2O-ac 主题在 package.json 文件中将所有库都更新到目前最新，对应版本列表如下所示。另外，为了减少一些第三方 CSS 样式的请求数，利用自动构建工作流将固定的第三方 CSS 样式文件合并并压缩为 plugins.min.css 文件。app.min.css 仍为多个自编写 CSS 样式文件的合并压缩。</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">运行环境或依赖库</th>
      <th style="text-align: center">版本号</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center">NodeJS</td>
      <td style="text-align: center">v17.0.0</td>
    </tr>
    <tr>
      <td style="text-align: center">gulp</td>
      <td style="text-align: center">v4.0.2</td>
    </tr>
    <tr>
      <td style="text-align: center">gulp-clean-css</td>
      <td style="text-align: center">v4.3.0</td>
    </tr>
    <tr>
      <td style="text-align: center">gulp-rename</td>
      <td style="text-align: center">v20.0</td>
    </tr>
    <tr>
      <td style="text-align: center">gulp-sass</td>
      <td style="text-align: center">v5.0.0</td>
    </tr>
    <tr>
      <td style="text-align: center">gulp-uglify</td>
      <td style="text-align: center">v3.0.2</td>
    </tr>
    <tr>
      <td style="text-align: center">gulp-concat</td>
      <td style="text-align: center">v2.6.1</td>
    </tr>
    <tr>
      <td style="text-align: center"><del>node-sass</del></td>
      <td style="text-align: center"><del>v7.0.0</del></td>
    </tr>
    <tr>
      <td style="text-align: center">sass</td>
      <td style="text-align: center">v1.51.0</td>
    </tr>
  </tbody>
</table>

<h2 id="使用方法">使用方法</h2>

<h3 id="初始化">初始化</h3>

<h4 id="方式一从模板新建博客">方式一：从模板新建博客</h4>

<p>  为了方便用户使用 H2O-ac 主题，特别提供了 Github 的模板功能。如下图所示，访问 <a href="https://github.com/zhonger/jekyll-theme-H2O-ac">H2O-ac</a> 可以看到如下的 Use this template 按钮，点击该按钮即可用 H2O-ac 主题创建自己的博客代码仓库。想要了解更多步骤，可以访问 Github 官方文档之 <a href="https://docs.github.com/cn/repositories/creating-and-managing-repositories/creating-a-repository-from-a-template">从模板创建仓库</a>。</p>

<p><img src="https://i.luish.cc/blog/oHHZZh.webp" alt="从模板新建 Start the blog from the template" /></p>

<h4 id="方式二已有博客迁移">方式二：已有博客迁移</h4>

<p>  <del>暂时无法支持 gem 直接切换主题，后续将更新此方式。目前只能使用方式一创建仓库后，将文章的 markdown 文件复制到 _posts 目录下应用 H2O-ac 主题。</del></p>

<p>(2021年12月26日更新)</p>

<p>  现已支持使用 gem 直接切换主题 <code class="language-plaintext highlighter-rouge">jekyll-theme-h2o-ac</code>。同时，也推出了一键式构建工具 <a href="https://github.com/zhonger/easy-to-h2o-ac">easy-to-h2o-ac</a>，详细可以见项目主页。</p>

<h3 id="本地测试">本地测试</h3>

<p>  在进行本地测试时，如果需要修改一些样式，则需要先执行 <code class="language-plaintext highlighter-rouge">npm install</code> 来完成前端自动构建工作流依赖库的安装。注意，这里设定的可用 NodeJS 版本为 v17.0.0，使用老版本会报错。其次，务必使用 <code class="language-plaintext highlighter-rouge">bundle install</code> 安装主题所需的所有 Ruby 依赖库。最后执行 <code class="language-plaintext highlighter-rouge">bundle exec jekyll serve --livereload</code> 命令即可在本地实时同步预览。只要不修改 _config.yml 文件，不必中断后再启动。然后就是在 <code class="language-plaintext highlighter-rouge">_posts</code> 目录下写 markdown 文章即可。</p>

<h3 id="发布部署">发布部署</h3>

<p>  由于 Github 提供 Jekyll 静态生成器的静态页面托管，只要打开仓库的 Pages 功能，当推送更新到 Github 时即会自动部署。此处值得注意的是，如果代码仓库的名字不是 <code class="language-plaintext highlighter-rouge">username.github.io</code>，而也没有为该仓库的 Pages 提供自定义域名，那么这个仓库将会被部署到子目录，因此此时必须在 _config.yml 文件中设置 base_url，从而生成正常的静态页面。</p>

<h2 id="结束语">结束语</h2>

<p>  再次感谢廖柯宇及其他小伙伴们对 H2O 主题的付出，没有 H2O 主题就没有 H2O-ac 主题！H2O-ac 主题后续也将继续更新，欢迎小伙伴们使用和 <a href="https://github.com/zhonger/jekyll-theme-H2O-ac">Star</a>，也欢迎大家一起来贡献代码。</p>

<p>（Ps: <del>由于沿用了 H2O 的 Logo，可能会侵犯廖柯宇的版权。如果的确如此，后续将会设计一个新的 Logo。</del> 已采用新 Logo。）
（2022年1月10日更新）</p>]]></content><author><name>zhonger</name></author><category term="tech" /><category term="jekyll" /><category term="theme" /><summary type="html"><![CDATA[前言]]></summary></entry><entry><title type="html">MathJax Test</title><link href="https://sprzwty.github.io/test/mathjax-test.html" rel="alternate" type="text/html" title="MathJax Test" /><published>2017-07-30T00:00:00+00:00</published><updated>2017-07-30T00:00:00+00:00</updated><id>https://sprzwty.github.io/test/mathjax-test</id><content type="html" xml:base="https://sprzwty.github.io/test/mathjax-test.html"><![CDATA[<p>mathjax in markdown :)</p>

<p><strong>这是一个不<code class="language-plaintext highlighter-rouge">align</code>的公式</strong>：</p>

\[\forall \alpha \in A, \quad a \cdot b = 0\]

<p><strong>这是一个<code class="language-plaintext highlighter-rouge">align</code>的公式</strong>：</p>

\[\begin{align}
    \Phi(0,x) = \max_{u \in \mathcal{D}} \bigg[
        \mathbb{E} &amp; \Phi\left(1, 
        x + \int_0^1 \sigma^2(s) \, \zeta(s) \, u_s \, ds
        + \int_0^1 \sigma(s) \, dW_s
    \right) \\
        &amp;- \frac{1}{2} \int_0^1 \sigma^2(s) \, \zeta(s) \,
        \mathbb{E} u_s^2  \, ds
    \bigg].
\end{align}\]

<p><strong>注意：</strong>公式块要想有较好的显示效果，必须在公式块标记符<code class="language-plaintext highlighter-rouge">$$</code><strong>前后</strong>留有空行，否则公式将不能正常居中。行内公式无此问题。</p>]]></content><author><name>zhonger</name></author><category term="test" /><category term="mathjax" /><summary type="html"><![CDATA[mathjax in markdown :)]]></summary></entry></feed>